// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String @unique
  password String
  firstName String
  lastName String
  isEmailVerified Boolean @default(false)
  
  resetPasswordRequests ResetPasswordRequest[]
  emailConfirmationRequests EmailConfirmationRequest[]
  favouriteArticles FavouriteArticle[]
}

model FavouriteArticle {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author String?
  title String?
  url String
  urlToImage String?
  publishedAt String?
  publisher String?

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model ResetPasswordRequest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  token     String   @unique
  expiresAt DateTime
  email String
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model EmailConfirmationRequest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  token     String   @unique
  expiresAt DateTime
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}